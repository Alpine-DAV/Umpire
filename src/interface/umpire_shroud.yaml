##############################################################################
# Copyright (c) 2018, Lawrence Livermore National Security, LLC.
# Produced at the Lawrence Livermore National Laboratory
#
# Created by David Beckingsale, david@llnl.gov
# LLNL-CODE-747640
#
# All rights reserved.
#
# This file is part of Umpire.
#
# For details, see https://github.com/LLNL/Umpire
# Please also see the LICENSE file for MIT license.
##############################################################################
library: Umpire
namespace: umpire

options:
  C_prefix: UMPIRE_
  F_module_per_class: False

classes:
  - name: ResourceManager
    cpp_header: umpire/ResourceManager.hpp
    F_derived_name: UmpireResourceManager

    methods:
      - decl: ResourceManager& get() +constructor
        C_code: auto& SH_rv = ResourceManager::getInstance();
                return static_cast<UMPIRE_resourcemanager *>(static_cast<void *>(&SH_rv));

      - decl: Allocator* getAllocator(const std::string& resource)
      - decl: void copy(void* src_ptr, void* dst_ptr)
      - decl: void deallocate(void* ptr)

  - name: Allocator
    cpp_header: umpire/Allocator.hpp
    F_derived_name: UmpireAllocator

    methods:
      - decl: void* allocate(size_t bytes)
      - decl: void deallocate (void* ptr)
